/**
 * 
 */
package AP2DX.motor;

import java.util.ArrayList;

import AP2DX.specializedMessages.*;
import AP2DX.AP2DXMessage;
import AP2DX.InterfaceActions;
import AP2DX.Message;
import AP2DX.Module;

/**
 * @author Wadie Assal
 * @author Jeroen Rooijmans
 * 
 * So, if I understand correctly, this is what is happening. The planner says 'lets go forward 1 meter', and
 * sends an abstract 'go forward' message to the reflex. The reflex checks if this is correct, alters
 * it if it should and forwards it to the motor. The motor then changes 'lets go forward 1 meter' to 
 * something the usersim can understand, such as 'left and right wheel forward 1' and sends it to the 
 * coordinator. 
 * 
 * Does it make sense to have an interface for the actions? I do not think so. The message from the planner
 * to the reflex can be the same kind of message that the reflex sends to the motor. 
 * 
 * Also, we should make sure the motor should keep data on what it has been sending 
 */
public class Actions 
{

	/**
	 * 
	 */
	public Actions() {
		
	}

	/** 
	 * 
	 */
	@Override
	public ArrayList<AP2DXMessage> forward(int meter) 
    {
		DriveCoordinatorMessage forward = 
			new DriveCoordinatorMessage(Module.ABSTRACTMOTOR, Module.COORDINATOR, CoordinatorMessage.Command.DRIVE, 20, 20);
		DriveCoordinatorMessage stop = 
			new DriveCoordinatorMessage(Module.ABSTRACTMOTOR, Module.COORDINATOR, CoordinatorMessage.Command.DRIVE, 0, 0);
		
		stop.setDelay(1000 * meter);
		
		ArrayList<AP2DXMessage> list = new ArrayList<AP2DXMessage>();
		list.add(forward);
		list.add(stop);
		return list;
	}

	/* (non-Javadoc)
	 * @see AP2DX.InterfaceActions#backward(int)
	 */
	@Override
	public ArrayList<AP2DXMessage> backward(int meter) 
    {
		
	}

	/* (non-Javadoc)
	 * @see AP2DX.InterfaceActions#left(int)
	 */
	@Override
	public ArrayList<AP2DXMessage> left(int meter) {
		
		
		return new ArrayList<AP2DXMessage>();
	}

	/* (non-Javadoc)
	 * @see AP2DX.InterfaceActions#right(int)
	 */
	@Override
	public ArrayList<AP2DXMessage> right(int meter) {
		
		
		return new ArrayList<AP2DXMessage>();
	}

	/* (non-Javadoc)
	 * @see AP2DX.InterfaceActions#turn(int)
	 */
	@Override
	public ArrayList<AP2DXMessage> turn(int degree) {
		
		
		return new ArrayList<AP2DXMessage>();
	}

	/* (non-Javadoc)
	 * @see AP2DX.InterfaceActions#stop()
	 */
	@Override
	public ArrayList<AP2DXMessage> stop() {
		DriveCoordinatorMessage stop = 
			new DriveCoordinatorMessage(Module.ABSTRACTMOTOR, Module.COORDINATOR, CoordinatorMessage.Command.DRIVE, 0, 0);
		
		ArrayList<AP2DXMessage> list = new ArrayList<AP2DXMessage>();
		list.add(stop);
		return list;
	}

}
